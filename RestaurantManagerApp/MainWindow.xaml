<Window x:Class="RestaurantManagerApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RestaurantManagerApp"
        xmlns:vm="clr-namespace:RestaurantManagerApp.ViewModels"
        xmlns:views="clr-namespace:RestaurantManagerApp.Views"
        mc:Ignorable="d"
        Title="Restaurant Manager" Height="700" Width="1100"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!-- DataTemplates pentru a mapa ViewModels la Views -->
        <!-- Acest lucru permite ca ContentControl să afișeze vederea corectă
             bazându-se pe tipul CurrentViewModel din MainViewModel -->

        <DataTemplate DataType="{x:Type vm:LoginViewModel}">
            <views:LoginView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:RegistrationViewModel}">
            <views:RegistrationView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:CategoryManagementViewModel}">
            <views:CategoryManagementView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:AlergenManagementViewModel}">
            <views:AlergenManagementView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:PreparatManagementViewModel}">
            <views:PreparatManagementView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:MeniuManagementViewModel}">
            <views:MeniuManagementView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:EmployeeDashboardViewModel}">
            <views:EmployeeDashboardView/>
        </DataTemplate>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Rând pentru bara de navigare/acțiuni -->
            <RowDefinition Height="*"/>
            <!-- Rând pentru conținutul principal -->
        </Grid.RowDefinitions>

        <!-- Bara de Navigare/Acțiuni (vizibilă după login) -->
        <Border Grid.Row="0" Background="#FFE0E0E0" Padding="5"
        Visibility="{Binding IsUserLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!-- Folosim un Grid în loc de StackPanel pentru bara de acțiuni -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <!-- Pentru butonul Înapoi -->
                    <ColumnDefinition Width="*"/>
                    <!-- Spațiu care se extinde -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- Pentru butonul Logout -->
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Content="Înapoi"
                Command="{Binding NavigateBackCommand}"
                Padding="10,5" Margin="5" VerticalAlignment="Center"/>

                <!-- Butonul Logout va fi aliniat la dreapta datorită Width="*" pe coloana din mijloc -->
                <Button Grid.Column="2" Content="Logout"
                Command="{Binding LogoutCommand}"
                Padding="10,5" Margin="5" VerticalAlignment="Center"/>
            </Grid>
        </Border>


        <!-- ContentControl pentru Vederile Curente -->
        <ContentControl Grid.Row="1" Content="{Binding CurrentViewModel}" Margin="5"/>

    </Grid>
</Window>